% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_sample_exact.r
\name{file_sample_exact}
\alias{file_sample_exact}
\title{Exact File Sampler}
\usage{
file_sample_exact(nlines, infile, outfile = tempfile(), header = TRUE,
  nskip = 0, verbose = FALSE)
}
\arguments{
\item{nlines}{The (exact) number of lines to sample from the input file.}

\item{infile}{Location of the file (as a string) to be subsampled.}

\item{outfile}{Output file location (as a string).}

\item{header}{Is a header (line of column names) on the first line of the csv file?}

\item{nskip}{Number of lines to skip. If \code{header=TRUE}, then this only applies to
lines after the header.}

\item{verbose}{Should linecounts of the input file and the number of lines sampled be
printed?}
}
\value{
\code{NULL}
}
\description{
Randomly sample exactly \code{nlines} lines from an input text file.
}
\details{
The sampling is done in two passes of the input file.  First, the number of
lines of the input file are determined by scanning through the file as
quickly as possible (i.e., it should be completely I/O bound).  Next, an
index of lines to keep is produced by reservoir sampling.  Then finally,  the
input file is scanned again line by line with the chosen lines dumped into a
temporary file.

If the output file (the one pointed to by the return of this function) is
"large" and to be read into memory (which isn't really appropriate for text
files in the first place!), then this strategy is probably not appropriate.
}
